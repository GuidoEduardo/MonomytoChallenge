// <auto-generated />
#nullable enable
using System.Reflection;
using FluentValidation;
using FluentValidation.AspNetCore;
using Microsoft.EntityFrameworkCore;
using MonomytoChallenge.Data;


var builder = WebApplication.CreateBuilder(args);

// Adiciona os services ao builder
builder.Services.AddDbContext<ApiContext>(
    options => options.UseSqlite(builder.Configuration["SqliteConnectionString"]));

builder.Services
    .AddControllers()
    .AddNewtonsoftJson(options =>
    {
        options.SerializerSettings.ReferenceLoopHandling =
            Newtonsoft.Json.ReferenceLoopHandling.Ignore;
    });

builder.Services.AddFluentValidationAutoValidation();
builder.Services.AddValidatorsFromAssembly(Assembly.GetExecutingAssembly());

builder.Services.AddControllers();

var app = builder.Build();

// Configura o HTTP Request
app.UseAuthorization();

app.MapControllers();

// Realiza a inserção dos dados no banco
using (var scope = app.Services.CreateScope())
{
    var context = scope.ServiceProvider.GetRequiredService<ApiContext>();

    DataInitializer.SeedAll(context, app);
}

app.Run();